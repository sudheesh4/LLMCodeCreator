- home.html
```html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>My Website</title>
    <!-- import CSS stylesheet -->
    <link rel="stylesheet" href="style.css">
  </head>
  <body>
    <!-- display text and images according to the theme -->
    <h1>Hello, world!</h1>
    <img src="image1.jpg" alt="Image 1">
    <p id="description">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
    <!-- add a scrollable container for the content -->
    <div class="container">
      <ul id="gallery">
        <!-- loop through the images and display them with captions -->
        <li><img src="image2.jpg" alt="Image 2">
          <p>Image 2</p>
        </li>
        <li><img src="image3.jpg" alt="Image 3">
          <p>Image 3</p>
        </li>
        <!-- add more li elements with img and p tags -->
      </ul>
    </div>
    <!-- add a script tag to load the CSS and handle the scroll event -->
    <script src="script.js"></script>
    <script>
      // get the container element
      const container = document.querySelector(".container");
      // get the gallery ul element
      const gallery = document.getElementById("gallery");
      // set a maximum height for the container
      container.style.maxHeight = "500px";
      // add an event listener to the scroll wheel or touch
      container.addEventListener("wheel", () => {
        // calculate the current scroll position
        const scrollPosition = container.scrollTop;
        // update the gallery's left property based on the scroll position
        gallery.style.transform = `translateX(${scrollPosition}px)`;
      });
    </script>
  </body>
</html>
```
- style.css
```css
/* set the font family and size, and text alignment */
body {
  font-family: Arial, sans-serif;
  font-size: 16px;
  text-align: justify;
}

/* set the background color and box model for the container */
.container {
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  margin: 20px;
  padding: 20px;
  width: 80%;
}

/* set the display, flex, and margin properties for the gallery */
#gallery {
  display: flex;
  margin: 0;
}

/* set the aspect ratio, width, height, and object-fit property for the images */
img {
  aspect-ratio: 16 / 9;
  width: 80%;
  max-height: 350px;
  object-fit: cover;
}

/* set the padding, border, and color properties for the captions */
p {
  padding: 10px;
  border: 2px solid #333;
  color: #333;
}

/* add a hover effect to the images by changing their opacity */
img:hover {
  opacity: 0.8;
}

/* set the width, margin, and padding properties for the scroll bar */
::-webkit-scrollbar {
  width: 8px;
  background-color: #f0f0f0;
}

/* set the border, width, and color properties for the scroll bar thumb */
::-webkit-scrollbar-thumb {
  border-radius: 10px;
  border: 2px solid #333;
  width: 20px;
  background-color: #f0f0f0;
}
```
- script.js
```javascript
// get the container element
const container = document.querySelector(".container");
// get the gallery ul element
const gallery = document.getElementById("gallery");
// set a maximum height for the container
container.style.maxHeight = "500px";
// add an event listener to the scroll wheel or touch
container.addEventListener("wheel", () => {
  // calculate the current scroll position
  const scrollPosition = container.scrollTop;
  // update the gallery's left property based on the scroll position
  gallery.style.transform = `translateX(${scrollPosition}px)`;
});
```